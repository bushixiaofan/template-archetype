<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd

		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!-- 自动扫描web包下的@Controller标注的类控制器类 -->
	<context:component-scan base-package="it.pkg.controller" />

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<mvc:annotation-driven/>

	<!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->
	<bean
			class="org.springframework.web.servlet.view.InternalResourceViewResolver"
			p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" />
	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		  p:defaultEncoding="utf-8" />

	<bean id="messageSource"
		  class="org.springframework.context.support.ResourceBundleMessageSource"
		  p:basename="i18n/messages" />


	<!--幂等器-->
	<bean id="idempotentInterceptor" class="com.song.common.idempotent.IdempotentInterceptor">
		<property name="redisManager" ref="redisManager"/>
	</bean>

	<!--幂等器-->
	<bean id="logParamInterceptor" class="it.pkg.aop.advice.ParamsLogAop">
	</bean>

	<!--打印请求返回日志aop-->
	<bean
			class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="proxyTargetClass" value="false"/>
		<property name="beanNames">
			<list>
				<value>*Controller</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>idempotentInterceptor</value>
				<value>logParamInterceptor</value>
			</list>
		</property>
	</bean>

	<!--spring aop schema 配置-->
	<aop:config proxy-target-class="true">
		<!-- 定义公共的切入点表达式 -->
		<aop:pointcut expression="execution(* it.pkg.service.impl.*.*(..))" id="pointCutCommon"/>
		<!-- 定义切面，命名为 adviceRespect 优先级是2 ref：表示对谁进行增强处理-->
		<aop:aspect id = "adviceRespect" ref = "inter" order="1">
			<aop:before pointcut-ref="pointCutCommon" method="checkMessage"/>
			<aop:after-returning pointcut-ref="pointCutCommon" method="checkReturn" returning="obj"/>
			<aop:around pointcut-ref="pointCutCommon" method="checkAround"/>
			<aop:after pointcut-ref="pointCutCommon" method="checkAfter"/>
		</aop:aspect>
		<aop:aspect id = "firstExecute" ref = "inter" order = "2">
			<aop:after-throwing pointcut-ref="pointCutCommon" method="checkAfterThrowing" throwing="ex"/>
		</aop:aspect>
	</aop:config>

	<bean id="inter" class="it.pkg.aop.aspect.HelloAdvice"/>
	<bean id="helloWorldService" class="it.pkg.service.impl.HelloWorldServiceImpl"/>

</beans>
